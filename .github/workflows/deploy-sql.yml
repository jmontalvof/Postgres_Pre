name: Ejecutar script SQL definido en instruccionesPRE.txt

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/instruccionesPRE.txt'
      - 'src/*.sql'

jobs:
  execute-sql:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar el repo
        uses: actions/checkout@v3

      - name: Instalar cliente PostgreSQL
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Leer variables desde instruccionesPRE.txt
        id: leer_variables
        run: |
          # Extraer valores desde el fichero
          BD=$(grep '^BD=' src/instruccionesPRE.txt | cut -d'=' -f2)
          SCHEMA=$(grep '^CURRENT_SCHEMA=' src/instruccionesPRE.txt | cut -d'=' -f2)
          SCRIPT=$(grep '^SQL=' src/instruccionesPRE.txt | cut -d'=' -f2)

          echo "bd=$BD" >> $GITHUB_OUTPUT
          echo "schema=$SCHEMA" >> $GITHUB_OUTPUT
          echo "script=$SCRIPT" >> $GITHUB_OUTPUT

      - name: Verificar que la base de datos existe
        env:
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
        run: |
          EXISTE=$(psql -h ${{ secrets.PGHOST }} -U ${{ secrets.PGUSER }} -d postgres -tAc "SELECT 1 FROM pg_database WHERE datname='${{ steps.leer_variables.outputs.bd }}'")
          if [ "$EXISTE" != "1" ]; then
            echo "‚ùå La base de datos '${{ steps.leer_variables.outputs.bd }}' no existe"
            exit 1
          fi
          echo "‚úÖ La base de datos existe"

      - name: Verificar que el esquema existe
        env:
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
        run: |
          EXISTE=$(psql -h ${{ secrets.PGHOST }} -U ${{ secrets.PGUSER }} -d ${{ steps.leer_variables.outputs.bd }} -tAc "SELECT 1 FROM information_schema.schemata WHERE schema_name='${{ steps.leer_variables.outputs.schema }}'")
          if [ "$EXISTE" != "1" ]; then
            echo "‚ùå El esquema '${{ steps.leer_variables.outputs.schema }}' no existe"
            exit 1
          fi
          echo "‚úÖ El esquema existe"

      - name: Ejecutar el script SQL
        env:
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
        run: |
          echo "üöÄ Ejecutando el script ${{ steps.leer_variables.outputs.script }}"
          psql -h ${{ secrets.PGHOST }} \
               -U ${{ secrets.PGUSER }} \
               -d ${{ steps.leer_variables.outputs.bd }} \
               -v schema=${{ steps.leer_variables.outputs.schema }} \
               -f src/${{ steps.leer_variables.outputs.script }}
